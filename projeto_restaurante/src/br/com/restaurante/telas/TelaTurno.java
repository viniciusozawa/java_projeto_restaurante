/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.restaurante.telas;

import br.com.restaurante.classes.Turno;
import br.com.restaurante.classes.TurnoDAO;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import org.jdesktop.beansbinding.Converter;

/**
 *
 * @author yuji
 */
public class TelaTurno extends javax.swing.JFrame {

    TurnoDAO objTurnoDAO = new TurnoDAO();
    Converter horarioConverter = new Converter() {
        private final DateTimeFormatter formatter = DateTimeFormatter.ofPattern("HH:mm");

        @Override
        public Object convertForward(Object sourceValue) {
            // String → LocalTime
            try {
                if (sourceValue instanceof String) {
                    return LocalTime.parse((String) sourceValue, formatter);
                }
            } catch (Exception e) {
                return null;
            }
            return sourceValue;
        }

        @Override
        public Object convertReverse(Object targetValue) {
            // LocalTime → String
            if (targetValue instanceof LocalTime) {
                return ((LocalTime) targetValue).format(formatter);
            }
            return "";
        }
    };

    /**
     * Creates new form TelaTurno
     */
    public TelaTurno() {
        initComponents();
        atulizaTabela();
    }

    public void atulizaTabela() {
        listTurno.clear();
        listTurno.addAll(objTurnoDAO.getLista());
        int linha = listTurno.size() - 1;
        if (linha >= 0) {
            tbl_turnos.setRowSelectionInterval(linha, linha);
            tbl_turnos.scrollRectToVisible(tbl_turnos.getCellRect(linha, linha, true));
        }
    }

    private void trataEdicao(boolean editando) {
        btn_cancelar.setEnabled(editando);
        btn_salva.setEnabled(editando);
        btn_editar.setEnabled(!editando);

        int linha = listTurno.size() - 1;
        if (linha < 0) {
            btn_excluir.setEnabled(false);
            btn_editar.setEnabled(false);
            input_codigo.setText("");
            horarioFinal.setText("");
            horarioInicial.setText("");
            btn_primeiro.setEnabled(false);
            btn_proximo.setEnabled(false);
            btn_anterior.setEnabled(false);
            btn_ultimo.setEnabled(false);

        } else {
            btn_excluir.setEnabled(!editando);
            btn_editar.setEnabled(!editando);
            btn_primeiro.setEnabled(!editando);
            btn_proximo.setEnabled(!editando);
            btn_anterior.setEnabled(!editando);
            btn_ultimo.setEnabled(!editando);
        }

        btn_fechar.setEnabled(!editando);
        input_codigo.setEnabled(editando);
        horarioInicial.setEditable(editando);
        horarioFinal.setEditable(editando);
        tbl_turnos.setEnabled(editando);
    }

    public boolean validaCampos() {
        

        String texto = horarioInicial.getText();
        if (texto == null || texto.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Preencha o horário inicial.");
            return false;
        }
        
        String texto2 = horarioFinal.getText();
        if (texto2 == null || texto.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Preencha o horário inicial.");
            return false;
        }

        return true;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        listTurno = org.jdesktop.observablecollections.ObservableCollections.observableList(new ArrayList<Turno>())
        ;
        painelNavegacao = new javax.swing.JPanel();
        btn_primeiro = new javax.swing.JButton();
        btn_anterior = new javax.swing.JButton();
        btn_proximo = new javax.swing.JButton();
        btn_ultimo = new javax.swing.JButton();
        btn_fechar = new javax.swing.JButton();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_turnos = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        btn_novo = new javax.swing.JButton();
        btn_editar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        btn_salva = new javax.swing.JButton();
        btn_excluir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        input_codigo = new javax.swing.JTextField();
        horarioInicial = new javax.swing.JTextField();
        horarioFinal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        painelNavegacao.setBorder(javax.swing.BorderFactory.createTitledBorder("Navegação"));

        btn_primeiro.setText("Primeiro");
        btn_primeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_primeiroActionPerformed(evt);
            }
        });
        painelNavegacao.add(btn_primeiro);

        btn_anterior.setText("Anterior");
        btn_anterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_anteriorActionPerformed(evt);
            }
        });
        painelNavegacao.add(btn_anterior);

        btn_proximo.setText("Próximo");
        btn_proximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_proximoActionPerformed(evt);
            }
        });
        painelNavegacao.add(btn_proximo);

        btn_ultimo.setText("Último");
        btn_ultimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ultimoActionPerformed(evt);
            }
        });
        painelNavegacao.add(btn_ultimo);

        btn_fechar.setText("Fechar");
        btn_fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_fecharActionPerformed(evt);
            }
        });
        painelNavegacao.add(btn_fechar);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, listTurno, tbl_turnos);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${codTurno}"));
        columnBinding.setColumnName("Cod Turno");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horarioInicial}"));
        columnBinding.setColumnName("Horario Inicial");
        columnBinding.setColumnClass(java.time.LocalTime.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horarioFinal}"));
        columnBinding.setColumnName("Horario Final");
        columnBinding.setColumnClass(java.time.LocalTime.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane3.setViewportView(tbl_turnos);
        if (tbl_turnos.getColumnModel().getColumnCount() > 0) {
            tbl_turnos.getColumnModel().getColumn(1).setCellRenderer(new javax.swing.table.DefaultTableCellRenderer() {
                private final java.time.format.DateTimeFormatter formatter =
                java.time.format.DateTimeFormatter.ofPattern("HH:mm");

                @Override
                protected void setValue(Object value) {
                    if (value instanceof java.time.LocalTime) {
                        setText(((java.time.LocalTime) value).format(formatter));
                    } else {
                        super.setValue(value);
                    }
                }
            });
            tbl_turnos.getColumnModel().getColumn(2).setCellRenderer(new javax.swing.table.DefaultTableCellRenderer() {
                private final java.time.format.DateTimeFormatter formatter =
                java.time.format.DateTimeFormatter.ofPattern("HH:mm");

                @Override
                protected void setValue(Object value) {
                    if (value instanceof java.time.LocalTime) {
                        setText(((java.time.LocalTime) value).format(formatter));
                    } else {
                        super.setValue(value);
                    }
                }
            });
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 864, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 95, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Dados", jPanel1);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Ações"));

        btn_novo.setText("Novo");
        btn_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_novoActionPerformed(evt);
            }
        });
        jPanel3.add(btn_novo);

        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });
        jPanel3.add(btn_editar);

        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });
        jPanel3.add(btn_cancelar);

        btn_salva.setText("Salvar");
        btn_salva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvaActionPerformed(evt);
            }
        });
        jPanel3.add(btn_salva);

        btn_excluir.setText("Excluir");
        btn_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_excluirActionPerformed(evt);
            }
        });
        jPanel3.add(btn_excluir);

        jLabel1.setText("Código:");

        jLabel2.setText("Horário Inicial:");

        jLabel3.setText("Horário Final:");

        input_codigo.setEditable(false);
        input_codigo.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tbl_turnos, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.codTurno}"), input_codigo, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        input_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_codigoActionPerformed(evt);
            }
        });

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tbl_turnos, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.horarioInicial}"), horarioInicial, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(new org.jdesktop.beansbinding.Converter() {
            private final java.time.format.DateTimeFormatter formatter =
            java.time.format.DateTimeFormatter.ofPattern("HH:mm");

            @Override
            public Object convertForward(Object sourceValue) {
                if (sourceValue == null) return null;
                if (sourceValue instanceof java.time.LocalTime) {
                    return ((java.time.LocalTime) sourceValue).format(formatter);
                }
                return sourceValue.toString();
            }

            @Override
            public Object convertReverse(Object targetValue) {
                try {
                    String texto = (String) targetValue;
                    if (texto == null || texto.trim().isEmpty()) return null;
                    return java.time.LocalTime.parse(texto.trim(), formatter);
                } catch (Exception e) {
                    return null;
                }
            }
        });
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, tbl_turnos, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.horarioFinal}"), horarioFinal, org.jdesktop.beansbinding.BeanProperty.create("text"));
        binding.setConverter(new org.jdesktop.beansbinding.Converter() {
            private final java.time.format.DateTimeFormatter formatter =
            java.time.format.DateTimeFormatter.ofPattern("HH:mm");

            @Override
            public Object convertForward(Object sourceValue) {
                if (sourceValue == null) return null;
                if (sourceValue instanceof java.time.LocalTime) {
                    return ((java.time.LocalTime) sourceValue).format(formatter);
                }
                return sourceValue.toString();
            }

            @Override
            public Object convertReverse(Object targetValue) {
                try {
                    String texto = (String) targetValue;
                    if (texto == null || texto.trim().isEmpty()) return null;
                    return java.time.LocalTime.parse(texto.trim(), formatter);
                } catch (Exception e) {
                    return null;
                }
            }
        });
        bindingGroup.addBinding(binding);

        horarioFinal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horarioFinalActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 682, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(163, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(input_codigo, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                    .addComponent(horarioInicial)
                    .addComponent(horarioFinal))
                .addGap(313, 313, 313))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(input_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(horarioInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(horarioFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Cadastro", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelNavegacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jTabbedPane4)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(painelNavegacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 125, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_primeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_primeiroActionPerformed
        // TODO add your handling code here:
        tbl_turnos.setRowSelectionInterval(0, 0);
        tbl_turnos.scrollRectToVisible(tbl_turnos.getCellRect(0, 0, true));

    }//GEN-LAST:event_btn_primeiroActionPerformed

    private void btn_anteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_anteriorActionPerformed
        // TODO add your handling code here:
        int linha = tbl_turnos.getSelectedRow();
        if ((linha - 1) >= 0) {
            linha--;
        }
        tbl_turnos.setRowSelectionInterval(0, 0);
        tbl_turnos.scrollRectToVisible(tbl_turnos.getCellRect(linha, 0, true));
    }//GEN-LAST:event_btn_anteriorActionPerformed

    private void btn_proximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_proximoActionPerformed
        // TODO add your handling code here:
        int linha = tbl_turnos.getSelectedRow();
        if ((linha + 1) <= (tbl_turnos.getRowCount() - 1)) {
            linha++;
        }
        tbl_turnos.setRowSelectionInterval(linha, linha);
        tbl_turnos.scrollRectToVisible(tbl_turnos.getCellRect(linha, 0, true));
    }//GEN-LAST:event_btn_proximoActionPerformed

    private void btn_ultimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ultimoActionPerformed
        // TODO add your handling code here:
        int linha = tbl_turnos.getRowCount() - 1;

        tbl_turnos.setRowSelectionInterval(linha, linha);
        tbl_turnos.scrollRectToVisible(tbl_turnos.getCellRect(linha, 0, true));
    }//GEN-LAST:event_btn_ultimoActionPerformed

    private void btn_fecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_fecharActionPerformed
        // TODO add your handling code here:
        FormGerente form = new FormGerente();
        dispose();//feche a janela
        form.setVisible(true);
    }//GEN-LAST:event_btn_fecharActionPerformed

    private void btn_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_novoActionPerformed
        // TODO add your handling code here:

        listTurno.add(new Turno());
        int linha = listTurno.size() - 1;
        tbl_turnos.setRowSelectionInterval(linha, linha);
        btn_novo.requestFocus();
        trataEdicao(true);

    }//GEN-LAST:event_btn_novoActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        // TODO add your handling code here:
        trataEdicao(true);
        horarioInicial.requestFocus();
        horarioFinal.requestFocus();

    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        // TODO add your handling code here:

        atulizaTabela();
        trataEdicao(false);

    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_salvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvaActionPerformed
        // TODO add your handling code here:
        if (validaCampos()) {
            trataEdicao(false);
            int linhaselecionada = tbl_turnos.getSelectedRow();
            Turno objTurno = listTurno.get(linhaselecionada);
            objTurnoDAO.salvar(objTurno);
            atulizaTabela();
        }

    }//GEN-LAST:event_btn_salvaActionPerformed

    private void btn_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_excluirActionPerformed
        // TODO add your handling code here:
        int opcao = JOptionPane.showOptionDialog(null, "Confirma exclusao ? ", "Pergunta", JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, new String[]{"Sim", "Não"}, "Sim");
        if (opcao == 0) {
            int linhaSelecionada = tbl_turnos.getSelectedRow();
            Turno objTurno = listTurno.get(linhaSelecionada);
            objTurnoDAO.remover(objTurno);

            atulizaTabela();
            trataEdicao(false);
        }
    }//GEN-LAST:event_btn_excluirActionPerformed

    private void input_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_input_codigoActionPerformed

    private void horarioFinalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horarioFinalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horarioFinalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaTurno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaTurno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaTurno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaTurno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaTurno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_anterior;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_excluir;
    private javax.swing.JButton btn_fechar;
    private javax.swing.JButton btn_novo;
    private javax.swing.JButton btn_primeiro;
    private javax.swing.JButton btn_proximo;
    private javax.swing.JButton btn_salva;
    private javax.swing.JButton btn_ultimo;
    private javax.swing.JTextField horarioFinal;
    private javax.swing.JTextField horarioInicial;
    private javax.swing.JTextField input_codigo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private java.util.List<Turno> listTurno;
    private javax.swing.JPanel painelNavegacao;
    private javax.swing.JTable tbl_turnos;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
